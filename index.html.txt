<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Active Anti-Roll Bar Viewer</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      height: 100%;
      overflow: hidden;
      background-color: #111;
    }
    canvas {
      display: block;
    }
    #info {
      position: fixed;
      top: 10px;
      left: 10px;
      color: white;
      background: rgba(0, 0, 0, 0.5);
      padding: 10px;
      font-family: Arial, sans-serif;
      font-size: 14px;
      z-index: 1;
    }
  </style>
</head>
<body>
  <div id="info">3D View of Anti-Roll Bar (.stl)</div>

  <!-- Three.js core -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r150/three.min.js"></script>

  <!-- STL Loader -->
  <script src="https://cdn.jsdelivr.net/npm/three@0.150.0/examples/js/loaders/STLLoader.js"></script>

  <script>
    let scene, camera, renderer, mesh;

    init();
    animate();

    function init() {
      scene = new THREE.Scene();
      scene.background = new THREE.Color(0x111111);

      camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 100);
      camera.position.set(0, 1, 5);

      renderer = new THREE.WebGLRenderer({ antialias: true });
      renderer.setSize(window.innerWidth, window.innerHeight);
      document.body.appendChild(renderer.domElement);

      const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444, 1.2);
      hemiLight.position.set(0, 20, 0);
      scene.add(hemiLight);

      const dirLight = new THREE.DirectionalLight(0xffffff, 0.8);
      dirLight.position.set(5, 10, 7.5);
      scene.add(dirLight);

      // Load STL model
      const loader = new THREE.STLLoader();
      loader.load('models/antirollbar.stl', function (geometry) {
        const material = new THREE.MeshStandardMaterial({ color: 0xff5533, metalness: 0.3, roughness: 0.4 });
        mesh = new THREE.Mesh(geometry, material);
        mesh.rotation.x = -Math.PI / 2;  // STL models are often Z-up, fix to Y-up
        scene.add(mesh);
      });

      window.addEventListener('resize', () => {
        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();
        renderer.setSize(window.innerWidth, window.innerHeight);
      });
    }

    function animate() {
      requestAnimationFrame(animate);
      if (mesh) mesh.rotation.z += 0.01;
      renderer.render(scene, camera);
    }
  </script>
</body>
</html>
